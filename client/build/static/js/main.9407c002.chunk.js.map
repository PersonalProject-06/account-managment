{"version":3,"sources":["component/signIn/signIn.tsx","component/graphql/Mutation.ts","helpres/helper.ts","component/model/model.tsx","component/signUp/signUp.tsx","component/Route/PrivateRoute.tsx","component/homePage/Home.tsx","component/profil/profil.tsx","component/errorPage/error.tsx","component/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SignIn","className","style","borderRadius","type","id","href","to","CREATE_USER","gql","checkEmail","email","test","checkName","name","includes","checkPassword","password","length","ifMatch","password2","Model","model","setModel","navigate","useNavigate","Modal","show","Header","closeButton","Title","Body","Footer","Button","variant","onClick","SignUp","useState","setName","setEmail","setPassword","setPassword2","invalidInput","setInvalidInput","invalidEmail","setInvalidEmail","invalidPassword","setInvalidPassword","notMatch","setnotMatch","spinner","setSpinner","useMutation","createUser","data","loading","error","backgroundColor","onChange","e","target","value","variables","console","log","Spinner","animation","PrivateRoute","isAuth","Home","profil","Error","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","process","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.9407c002.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nexport const SignIn = () => {\n  return (\n    <section className=\"vh-100 gradient-custom\">\n      <div className=\"container py-5 h-100\">\n        <div className=\"row d-flex justify-content-center align-items-center h-100\">\n          <div className=\"col-12 col-md-8 col-lg-6 col-xl-5\">\n            <div\n              className=\"card bg-dark text-white\"\n              style={{ borderRadius: \"1rem\" }}\n            >\n              <div className=\"card-body p-5 text-center\">\n                <div className=\"mb-md-5 mt-md-4 pb-5\">\n                  <h2 className=\"fw-bold mb-2 text-uppercase\">Login</h2>\n                  <p className=\"text-white-50 mb-5\">\n                    Please enter your email and password!\n                  </p>\n\n                  <div className=\"form-outline form-white mb-4\">\n                    <input\n                      type=\"email\"\n                      id=\"typeEmailX\"\n                      className=\"form-control form-control-lg\"\n                    />\n                    <label className=\"form-label\">Email</label>\n                  </div>\n\n                  <div className=\"form-outline form-white mb-4\">\n                    <input\n                      type=\"password\"\n                      id=\"typePasswordX\"\n                      className=\"form-control form-control-lg\"\n                    />\n                    <label className=\"form-label\">Password</label>\n                  </div>\n\n                  <p className=\"small mb-5 pb-lg-2\">\n                    <a className=\"text-white-50\" href=\"#!\">\n                      Forgot password?\n                    </a>\n                  </p>\n\n                  <button\n                    className=\"btn btn-outline-light btn-lg px-5\"\n                    type=\"submit\"\n                  >\n                    Login\n                  </button>\n\n                  <div className=\"d-flex justify-content-center text-center mt-4 pt-1\">\n                    <a href=\"#!\" className=\"text-white\">\n                      <i className=\"fab fa-facebook-f fa-lg\"></i>\n                    </a>\n                    <a href=\"#!\" className=\"text-white\">\n                      <i className=\"fab fa-twitter fa-lg mx-4 px-2\"></i>\n                    </a>\n                    <a href=\"#!\" className=\"text-white\">\n                      <i className=\"fab fa-google fa-lg\"></i>\n                    </a>\n                  </div>\n                </div>\n\n                <div>\n                  <p className=\"mb-0\">\n                    Don't have an account?\n                    <Link to=\"/signup\" className=\"text-white-50 fw-bold\">\n                      Sign Up\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_USER = gql`\n  mutation createUser($name: String!, $email: String!, $password: String!) {\n    createUser(name: $name, email: $email, password: $password) {\n      success\n    }\n  }\n`;","export const checkEmail = (email: string): boolean => {\n  if (\n    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email) &&\n    typeof email === \"string\"\n  ) {\n    return true;\n  }\n  return false;\n};\n//\nexport const checkName = (name: string): boolean => {\n  if (typeof name === \"string\" && name.includes(\"<script>\") === false) {\n    return true;\n  }\n  return false;\n};\n\nexport const checkPassword = (password: string): boolean => {\n  if (\n    typeof password === \"string\" &&\n    password.length > 8 &&\n    /[^A-Za-z0-9]+/.test(password)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const ifMatch = (password: string, password2: string): boolean => {\n  if (password.length === password2.length) {\n    return true;\n  }\n  return false;\n};\n","import React from 'react'\nimport {Modal , Button} from 'react-bootstrap'\nimport {useNavigate} from \"react-router-dom\"\n\nfunction Model({model , setModel}:any) {\n    let navigate = useNavigate()\n    return (\n        <div>\n         <Modal show={model} >\n        <Modal.Header closeButton>\n          <Modal.Title>Your account is created </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Now Sign in to your Account</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" >\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={()=>{\n              navigate('/')\n              setModel(false)\n              }}>\n            Sign In\n          </Button>\n        </Modal.Footer>\n      </Modal>\n        </div>\n    )\n}\n\nexport default Model\n","import React, { useState } from \"react\";\nimport { CREATE_USER } from \"../graphql/Mutation\";\nimport { useMutation } from \"@apollo/client\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport {\n  checkEmail,\n  checkPassword,\n  checkName,\n  ifMatch,\n} from \"../../helpres/helper\";\nimport Model from \"../model/model\"\n\n\n\nexport const SignUp = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [invalidInput, setInvalidInput] = useState(false);\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [invalidPassword, setInvalidPassword] = useState(false);\n  const [notMatch, setnotMatch] = useState(false);\n  const [model , setModel] =useState(false);\n  const [spinner,setSpinner] =useState(false)\n  const [createUser, { data, loading, error }] = useMutation(CREATE_USER);\n\n  const state =()=>{\n    if(loading) {\n      setSpinner(true);\n      \n    }\n   else if( data ){\n      console.log(data);\n      setSpinner(false)\n      setModel(true);\n    }\n   else if(error){\n      setSpinner(false)\n      setModel(false);\n    }\n  }\n\n    \n  const checkCredentials = (): void => {\n    if (!checkEmail(email)) {\n      setInvalidEmail(true)\n    }\n    if (!checkPassword(password)) {\n      setInvalidPassword(true);\n    }\n    if (!checkName(name)) {\n      setInvalidInput(true);\n    }\n    if (!ifMatch(password, password2)) {\n      setnotMatch(true);\n    }\n    if (\n      checkEmail(email) &&\n      checkPassword(password) &&\n      checkName(name) &&\n      ifMatch(password, password2)\n    ) {\n      createUser({\n        variables: {\n          name,\n          email,\n          password,\n        },\n      });\n    }\n    return;\n  };\n\n  return (\n    <>\n    <Model  model={model} setModel={setModel}/>\n    <section className=\"vh-100\" style={{ backgroundColor: \"#6a11cb\" }}>\n      <div className=\"container h-100 \">\n        <div className=\"row d-flex justify-content-center align-items-center h-100 \">\n          <div className=\"col-lg-12 col-xl-11 \">\n            <div className=\"card text-black bg-dark\">\n              <div className=\"card-body p-md-5 text-white-50\">\n                <div className=\"row justify-content-center\">\n                  <div className=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n                    <p className=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4 mb-2 text-white text-uppercase\">\n                      Sign up\n                    </p>\n\n                    <div className=\"mx-1 mx-md-4\">\n                      {invalidInput && (\n                        <p className=\"text-danger form-label\">\n                          invalid input !\n                        </p>\n                      )}\n                      <div className=\"d-flex flex-row align-items-center mb-4\">\n                        <div className=\"form-outline flex-fill mb-0\">\n                          <input\n                            type=\"text\"\n                            id=\"form3Example1c\"\n                            className=\"form-control\"\n                            onChange={(e) => setName(e.target.value)}\n                          />\n                          <label className=\"form-label\">Your Name</label>\n                        </div>\n                      </div>\n\n                      {invalidEmail && (\n                        <p className=\"text-danger form-label\">\n                          invalid email !\n                        </p>\n                      )}\n                      <div className=\"d-flex flex-row align-items-center mb-4\">\n                        <div className=\"form-outline flex-fill mb-0\">\n                          <input\n                            type=\"email\"\n                            id=\"form3Example3c\"\n                            className=\"form-control\"\n                            onChange={(e) => setEmail(e.target.value)}\n                          />\n                          <label className=\"form-label\">Your Email</label>\n                        </div>\n                      </div>\n                      {invalidPassword && (\n                        <p className=\"text-danger form-label\">\n                          password must be at least 8 caracteres and includes\n                          caracteres and symbols and numbers !\n                        </p>\n                      )}\n\n                      <div className=\"d-flex flex-row align-items-center mb-4\">\n                        <div className=\"form-outline flex-fill mb-0\">\n                          <input\n                            type=\"password\"\n                            id=\"form3Example4c\"\n                            className=\"form-control\"\n                            onChange={(e) => setPassword(e.target.value)}\n                          />\n                          <label className=\"form-label\">Password</label>\n                        </div>\n                      </div>\n                      {notMatch && (\n                        <p className=\"text-danger form-label\">\n                          password not match !\n                        </p>\n                      )}\n\n                      <div className=\"d-flex flex-row align-items-center mb-4\">\n                        <div className=\"form-outline flex-fill mb-0\">\n                          <input\n                            type=\"password\"\n                            id=\"form3Example4cd\"\n                            className=\"form-control\"\n                            onChange={(e) => setPassword2(e.target.value)}\n                          />\n                          <label className=\"form-label\">\n                            Repeat your password\n                          </label>\n                        </div>\n                      </div>\n\n                      <div className=\"form-check d-flex justify-content-center mb-5\">\n                        <input\n                          className=\"form-check-input me-2\"\n                          type=\"checkbox\"\n                          value=\"\"\n                          id=\"form2Example3c\"\n                        />\n                        <label className=\"form-check-label\">\n                          I agree all statements in{\" \"}\n                          <a href=\"#!\" className=\"text-white-50 fw-bold\">\n                            Terms of service\n                          </a>\n                        </label>\n                      </div>\n\n                      <div className=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\n                        <button\n                          className=\"btn btn-outline-light btn-lg px-5 ml-10\"\n                          onClick={(e) => {\n                            checkCredentials();\n                            state()\n                          }}\n                        >\n                          {spinner?  <Spinner animation=\"border\" variant=\"light\" />:\"Login\"}\n                           \n                           \n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    </>\n  );\n};\n","import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n \nconst PrivateRoute = ({isAuth}:any) => {\n    const auth =isAuth.isAuth;\n      return auth ? <Outlet /> : <Navigate to=\"/\" />;\n}\n\n\nexport default PrivateRoute;","import React from 'react'\n\nfunction Home() {\n    return (\n        <div>\n              this is home page   \n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nexport default function profil() {\n    return (\n        <div>\n            hello this is profile \n        </div>\n    )\n}\n","import React from 'react'\n\nfunction Error() {\n    return (\n        <div>\n            this is the error page \n        </div>\n    )\n}\n\nexport default Error\n","import React, { Fragment } from \"react\";\n\nimport \"../css/App.css\";\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { SignIn } from \"./signIn/signIn\";\nimport { SignUp } from \"./signUp/signUp\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport PrivateRoute from \"./Route/PrivateRoute\";\nimport HomePage from \"./homePage/Home\";\nimport Profil from \"./profil/profil\";\nimport Error from \"./errorPage/error\";\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Fragment>\n          <Routes>\n            <Route path=\"/\" element={<SignIn />} />\n            <Route path=\"/signup\" element={<SignUp />} />\n            <Route\n              path=\"/\"\n              element={<PrivateRoute isAuth={{ isAuth: true }} />}\n            >\n              <Route path=\"/profil\" element={<Profil />} />\n            </Route>\n            <Route\n              path=\"/\"\n              element={<PrivateRoute isAuth={{ isAuth: true }} />}\n            >\n              <Route path=\"/home\" element={<HomePage />} />\n            </Route>\n            <Route path=\"*\" element={<Error />} />\n          </Routes>\n        </Fragment>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n//test 123\n//test","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ApolloClient , InMemoryCache , ApolloProvider} from \"@apollo/client\"\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_URI,\n  cache : new InMemoryCache()\n})\nReactDOM.render(\n  <React.StrictMode>\n <ApolloProvider client={client}>\n    <App />\n    </ApolloProvider >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}